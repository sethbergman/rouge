# -*- coding: utf-8 -*- #
require 'open-uri'

def render_sqf_commands
  yield "# -*- coding: utf-8 -*- #"
  yield "# frozen_string_literal: true"
  yield ""
  yield "# automatically generated by `rake builtins:sqf`"
  yield "module Rouge"
  yield "  module Lexers"
  yield "    class SQF < RegexLexer"
  yield "      def self.commands"
  yield "        @commands = Set.new %w("
  yield "          #{fetch_sqf_commands().join(" ")}"
  yield "        )"
  yield "      end"
  yield "    end"
  yield "  end"
  yield "end"
end

def fetch_sqf_commands
  url = "https://raw.githubusercontent.com/intercept/intercept/master/src/client/headers/client/sqf_assignments.hpp"
  pattern = /(?<=\(").+?(?=")/

  open(url) do |f|
    f.read.scan(pattern)
  end
end

namespace :builtins do
  task :sqf do
    File.open('lib/rouge/lexers/sqf/commands.rb', 'w') do |f|
      render_sqf_commands do |line|
        f.puts line
      end
    end
  end
end
